Absolutely! Here's the **full file structure** along with the contents of each file so you can copy-paste and set it up easily.

---

### **Project Folder Structure**
```
multi-container-app/
├── podman-compose.yml
├── nginx.conf
└── backend/
    ├── Dockerfile
    ├── server.js
    └── package.json
```

---

### **1. `multi-container-app/podman-compose.yml`**
```yaml
version: "3"

services:
  backend:
    build: ./backend
    container_name: backend
    ports:
      - "3000:3000"
    volumes:
      - backend-data:/app/data

  frontend:
    image: nginx:alpine
    container_name: frontend
    ports:
      - "8000:80"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - backend

volumes:
  backend-data:
```

---

### **2. `multi-container-app/nginx.conf`**
```nginx
events {}

http {
    server {
        listen 80;

        location / {
            proxy_pass http://backend:3000;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_cache_bypass $http_upgrade;
        }
    }
}
```

---

### **3. `multi-container-app/backend/Dockerfile`**
```Dockerfile
FROM node:18

WORKDIR /app
COPY . .
RUN npm install

CMD ["node", "server.js"]
```

---

### **4. `multi-container-app/backend/server.js`**
```js
const express = require('express');
const app = express();
const port = 3000;

app.get('/', (req, res) => {
  res.send('Hello from the Node.js backend!');
});

app.listen(port, '0.0.0.0', () => {
  console.log(`Server running at http://0.0.0.0:${port}`);
});
```

---

### **5. `multi-container-app/backend/package.json`**
```json
{
  "name": "simple-backend",
  "version": "1.0.0",
  "main": "server.js",
  "dependencies": {
    "express": "^4.18.2"
  }
}
```

---

### **To run the project:**

1. Navigate to the folder:
```bash
cd multi-container-app
```

2. Build and run the containers:
```bash
podman-compose build
podman-compose up
```

3. Open in browser:
```
http://localhost:8000
```

Let me know if you want a zip file version or want to extend this with static frontend or database!